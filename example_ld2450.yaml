#YAML code to be uploaded onto Home Assistant ESPHome device integration

#Note: Make sure to edit ESPHome Secrets to add ota_password(of your choosing), wifi_ssid, wifi_password and access point ssid and password for fallback hotspot

# Basic configuration for ESPHome
esphome: {name: ld2450, friendly_name: ld2450}  # Name and friendly name of the device

# External components from GitHub
external_components: 
  - source: {type: git, url: 'https://github.com/who-said/esphome-ld2450', ref: master}  # Source details
    components: [ld2450]  # Components to include

# Configuration for ESP8266 board
esp8266: {board: d1_mini}  # Board type

# Logger configuration
logger: {baud_rate: 0}  # Baud rate for the logger

# Home Assistant API
api: {encryption: {key: 'encryption key'}}  # Encryption key for the API

# Over-the-air update configuration
ota: {password: !secret ota_password}  # Password for OTA updates

# WiFi configuration
wifi: 
  ssid: !secret wifi_ssid  # SSID of the WiFi network
  password: !secret wifi_password  # Password of the WiFi network
  ap: {ssid: !secret ap_id, password: !secret ap_password}  # Fallback hotspot details

# Enable captive portal for WiFi configuration
captive_portal: {}

# UART configuration
uart: 
  id: uart_bus  # ID for the UART bus
  tx_pin: {number: GPIO1}  # TX pin number
  rx_pin: {number: GPIO3}  # RX pin number
  baud_rate: 256000  # Baud rate for the UART bus
  parity: NONE  # Parity for the UART bus
  stop_bits: 1  # Stop bits for the UART bus

# LD2450 sensor configuration
ld2450: 
  uart_id: uart_bus  # ID of the UART bus to use
  update_interval: 0.5s  # Update interval for the sensor
  invert_y: false  # Invert Y-axis
  invert_x: false  # Invert X-axis

# Binary sensor configuration
binary_sensor:
- platform: ld2450
  has_target: {name: Presence}  # Presence sensor
  has_moving_target: {name: Moving Target}  # Moving target sensor
  has_still_target: {name: Still Target}  # Still target sensor
  presence_regions: [{name: 'Zone 1', region_id: presence_region_1}]  # Presence regions, to add more just add extra refion_id and define the coordinates in number configurations in presence_regions
  

# Text sensor configuration
text_sensor:
  - platform: ld2450
    version: {name: 'FW'}  # Firmware version sensor
    mac_address: {name: 'MAC address'}  # MAC address sensor

# Button configuration
button:
  - platform: restart
    name: 'ESP Restart'  # Restart button for the 8266
  - platform: ld2450
    factory_reset: {name: 'Factory reset'}  # Factory reset button
    reboot: {name: 'Reboot'}  # Reboot button

# Switch configuration
switch:
  - platform: ld2450
    single_target: {name: 'Single target'}  # Single target switch, this will track a single target only
    bluetooth: {name: 'Bluetooth'}  # Bluetooth switch

# Number configuration
number:
- platform: ld2450
  rotate: {restore_value: true, initial_value: 0, name: 'Rotate angle'}  # Rotate angle number
  presence_timeout: {name: 'Presence timeout'}  # Presence timeout number
  presence_regions: [{x0: 100, y0: 100, x1: 200, y1: 200, id: presence_region_1}]  # Presence regions
  entry_points: [{x: 0, y: 0}]  # Entry points can be added here
  region_1: {x0: {name: R0X0}, y0: {name: R0Y0}, x1: {name: R0X1}, y1: {name: R0Y1}}  # Region 1
  region_2: {x0: {name: R1X0}, y0: {name: R1Y0}, x1: {name: R1X1}, y1: {name: R1Y1}}  # Region 2
  region_3: {x0: {name: R2X0}, y0: {name: R2Y0}, x1: {name: R2X1}, y1: {name: R2Y1}}  # Region 3

# Select configuration
select:
  - platform: ld2450
    baud_rate: {name: 'Baud rate'}  # Baud rate
    regions_type: {name: 'Regions type'}  # Regions type

# Sensor configuration
sensor:
- platform: ld2450
  target_count: {name: Target count}  # Target count sensor
  person_0: {position_x: {name: 'x1'}, position_y: {name: 'y1'}, speed: {name: 's1'}, resolution: {name: 'R1'}}  # Person 1
  person_1: {position_x: {name: 'x2'}, position_y: {name: 'y2'}, speed: {name: 's2'}, resolution: {name: 'R2'}}  # Person 2
  person_2: {position_x: {name: 'x3'}, position_y: {name: 'y3'}, speed: {name: 's3'}, resolution: {name: 'R3'}}  # Person 3
